@using TurboRango.Dominio.Utils
@using TurboRango.Dominio
@model TurboRango.Dominio.Reserva

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Reserva</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Restaurante, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ List<TurboRango.Dominio.Restaurante> lista = ViewBag.Restaurantes ?? new List<TurboRango.Dominio.Restaurante>(); }
                @Html.DropDownListFor(model => model.Restaurante, lista.Select(x => new SelectListItem { Text = (x.Nome +" - R$" +x.ValorPessoa.ToString()), Value = x.Id.ToString() }), htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control", @type="date" } })
                @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QtdePessoas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QtdePessoas, new { htmlAttributes = new { @Value = "1", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QtdePessoas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorTotal, new { htmlAttributes = new { @class = "form-control", @readonly="true", @id="ValorTotal"} })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
<script>
    var valores = JSON.parse('@Html.Raw(ViewBag.Valores)');

    $('#Restaurante').change(function () {
        var selecionado = this;
        valores.forEach(function (item) {
            if (item.Id == selecionado.value) {
                var total = ($('#QtdePessoas').val() * item.Valor)
                $('#ValorTotal').val("R$"+total);
            }
        })
    });

    $('#QtdePessoas').change(function () {
        if ($('#QtdePessoas').val() <= 0) { this.value = 1 }
        var valor = $('#QtdePessoas').val();
        valores.forEach(function (item) {
            var id = $('#Restaurante option:selected').val();
            if (item.Id == id) {
                var total = (valor * item.Valor)
                $('#ValorTotal').val("R$"+total);
            }
        })
    });
</script>
}
